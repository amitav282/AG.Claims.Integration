//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AG.Claims.CheckWriting.AG_Common {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DtoValidationBase", Namespace="http://schemas.datacontract.org/2004/07/AFS.AEF")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AG.Claims.CheckWriting.AG_Common.DTOBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AG.Claims.CheckWriting.AG_Common.PartyNameDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AG.Claims.CheckWriting.AG_Common.PartyAddressDTO))]
    public partial class DtoValidationBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DTOBase", Namespace="http://schemas.datacontract.org/2004/07/AFS.Architecture.Common")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AG.Claims.CheckWriting.AG_Common.PartyNameDTO))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(AG.Claims.CheckWriting.AG_Common.PartyAddressDTO))]
    public partial class DTOBase : AG.Claims.CheckWriting.AG_Common.DtoValidationBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private AG.Claims.CheckWriting.AG_Common.AuthorizationLevel EntityAuthLevelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public AG.Claims.CheckWriting.AG_Common.AuthorizationLevel EntityAuthLevel {
            get {
                return this.EntityAuthLevelField;
            }
            set {
                if ((this.EntityAuthLevelField.Equals(value) != true)) {
                    this.EntityAuthLevelField = value;
                    this.RaisePropertyChanged("EntityAuthLevel");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartyNameDTO", Namespace="http://epc.accenture.com/2013/06/26/Type")]
    [System.SerializableAttribute()]
    public partial class PartyNameDTO : AG.Claims.CheckWriting.AG_Common.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowPartialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalPartyNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeographicFormatCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPrimaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTaxNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastTransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartyNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowPartial {
            get {
                return this.AllowPartialField;
            }
            set {
                if ((this.AllowPartialField.Equals(value) != true)) {
                    this.AllowPartialField = value;
                    this.RaisePropertyChanged("AllowPartial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalPartyNameID {
            get {
                return this.ExternalPartyNameIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalPartyNameIDField, value) != true)) {
                    this.ExternalPartyNameIDField = value;
                    this.RaisePropertyChanged("ExternalPartyNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GeographicFormatCode {
            get {
                return this.GeographicFormatCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.GeographicFormatCodeField, value) != true)) {
                    this.GeographicFormatCodeField = value;
                    this.RaisePropertyChanged("GeographicFormatCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrimary {
            get {
                return this.IsPrimaryField;
            }
            set {
                if ((this.IsPrimaryField.Equals(value) != true)) {
                    this.IsPrimaryField = value;
                    this.RaisePropertyChanged("IsPrimary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTaxName {
            get {
                return this.IsTaxNameField;
            }
            set {
                if ((this.IsTaxNameField.Equals(value) != true)) {
                    this.IsTaxNameField = value;
                    this.RaisePropertyChanged("IsTaxName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastTransactionID {
            get {
                return this.LastTransactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LastTransactionIDField, value) != true)) {
                    this.LastTransactionIDField = value;
                    this.RaisePropertyChanged("LastTransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedDate {
            get {
                return this.LastUpdatedDateField;
            }
            set {
                if ((this.LastUpdatedDateField.Equals(value) != true)) {
                    this.LastUpdatedDateField = value;
                    this.RaisePropertyChanged("LastUpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartyID {
            get {
                return this.PartyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PartyIDField, value) != true)) {
                    this.PartyIDField = value;
                    this.RaisePropertyChanged("PartyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartyNameID {
            get {
                return this.PartyNameIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PartyNameIDField, value) != true)) {
                    this.PartyNameIDField = value;
                    this.RaisePropertyChanged("PartyNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PartyAddressDTO", Namespace="http://epc.accenture.com/2013/06/26/Type")]
    [System.SerializableAttribute()]
    public partial class PartyAddressDTO : AG.Claims.CheckWriting.AG_Common.DTOBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EffectiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalPartyAddressIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPrimaryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTaxAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastTransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartyAddressIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddressID {
            get {
                return this.AddressIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressIDField, value) != true)) {
                    this.AddressIDField = value;
                    this.RaisePropertyChanged("AddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExternalPartyAddressID {
            get {
                return this.ExternalPartyAddressIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalPartyAddressIDField, value) != true)) {
                    this.ExternalPartyAddressIDField = value;
                    this.RaisePropertyChanged("ExternalPartyAddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrimary {
            get {
                return this.IsPrimaryField;
            }
            set {
                if ((this.IsPrimaryField.Equals(value) != true)) {
                    this.IsPrimaryField = value;
                    this.RaisePropertyChanged("IsPrimary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTaxAddress {
            get {
                return this.IsTaxAddressField;
            }
            set {
                if ((this.IsTaxAddressField.Equals(value) != true)) {
                    this.IsTaxAddressField = value;
                    this.RaisePropertyChanged("IsTaxAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastTransactionID {
            get {
                return this.LastTransactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LastTransactionIDField, value) != true)) {
                    this.LastTransactionIDField = value;
                    this.RaisePropertyChanged("LastTransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdatedDate {
            get {
                return this.LastUpdatedDateField;
            }
            set {
                if ((this.LastUpdatedDateField.Equals(value) != true)) {
                    this.LastUpdatedDateField = value;
                    this.RaisePropertyChanged("LastUpdatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartyAddressID {
            get {
                return this.PartyAddressIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PartyAddressIDField, value) != true)) {
                    this.PartyAddressIDField = value;
                    this.RaisePropertyChanged("PartyAddressID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartyID {
            get {
                return this.PartyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PartyIDField, value) != true)) {
                    this.PartyIDField = value;
                    this.RaisePropertyChanged("PartyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubComment {
            get {
                return this.SubCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.SubCommentField, value) != true)) {
                    this.SubCommentField = value;
                    this.RaisePropertyChanged("SubComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthorizationLevel", Namespace="http://schemas.datacontract.org/2004/07/AFS.AEF")]
    public enum AuthorizationLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadOnly = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FullAccess = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AG_Common.IAG_Common")]
    public interface IAG_Common {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAG_Common/GetCheckPrintingInformation", ReplyAction="http://tempuri.org/IAG_Common/GetCheckPrintingInformationResponse")]
        AG.Claims.Integration.Types.AG_ClaimCheckWritingDTO[] GetCheckPrintingInformation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAG_Common/GetCheckPrintingInformation", ReplyAction="http://tempuri.org/IAG_Common/GetCheckPrintingInformationResponse")]
        System.Threading.Tasks.Task<AG.Claims.Integration.Types.AG_ClaimCheckWritingDTO[]> GetCheckPrintingInformationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAG_Common/UpdateCheckDetail", ReplyAction="http://tempuri.org/IAG_Common/UpdateCheckDetailResponse")]
        string UpdateCheckDetail(AG.Claims.Integration.Types.AG_ClaimCheckWritingDTO[] checkDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAG_Common/UpdateCheckDetail", ReplyAction="http://tempuri.org/IAG_Common/UpdateCheckDetailResponse")]
        System.Threading.Tasks.Task<string> UpdateCheckDetailAsync(AG.Claims.Integration.Types.AG_ClaimCheckWritingDTO[] checkDetail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAG_Common/InsertClaimHistoryOnParticipantChange", ReplyAction="http://tempuri.org/IAG_Common/InsertClaimHistoryOnParticipantChangeResponse")]
        void InsertClaimHistoryOnParticipantChange(bool addressChange, AG.Claims.CheckWriting.AG_Common.PartyAddressDTO partyAddress, AG.Claims.CheckWriting.AG_Common.PartyNameDTO partyName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAG_Common/InsertClaimHistoryOnParticipantChange", ReplyAction="http://tempuri.org/IAG_Common/InsertClaimHistoryOnParticipantChangeResponse")]
        System.Threading.Tasks.Task InsertClaimHistoryOnParticipantChangeAsync(bool addressChange, AG.Claims.CheckWriting.AG_Common.PartyAddressDTO partyAddress, AG.Claims.CheckWriting.AG_Common.PartyNameDTO partyName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAG_CommonChannel : AG.Claims.CheckWriting.AG_Common.IAG_Common, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AG_CommonClient : System.ServiceModel.ClientBase<AG.Claims.CheckWriting.AG_Common.IAG_Common>, AG.Claims.CheckWriting.AG_Common.IAG_Common {
        
        public AG_CommonClient() {
        }
        
        public AG_CommonClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AG_CommonClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AG_CommonClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AG_CommonClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AG.Claims.Integration.Types.AG_ClaimCheckWritingDTO[] GetCheckPrintingInformation() {
            return base.Channel.GetCheckPrintingInformation();
        }
        
        public System.Threading.Tasks.Task<AG.Claims.Integration.Types.AG_ClaimCheckWritingDTO[]> GetCheckPrintingInformationAsync() {
            return base.Channel.GetCheckPrintingInformationAsync();
        }
        
        public string UpdateCheckDetail(AG.Claims.Integration.Types.AG_ClaimCheckWritingDTO[] checkDetail) {
            return base.Channel.UpdateCheckDetail(checkDetail);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCheckDetailAsync(AG.Claims.Integration.Types.AG_ClaimCheckWritingDTO[] checkDetail) {
            return base.Channel.UpdateCheckDetailAsync(checkDetail);
        }
        
        public void InsertClaimHistoryOnParticipantChange(bool addressChange, AG.Claims.CheckWriting.AG_Common.PartyAddressDTO partyAddress, AG.Claims.CheckWriting.AG_Common.PartyNameDTO partyName) {
            base.Channel.InsertClaimHistoryOnParticipantChange(addressChange, partyAddress, partyName);
        }
        
        public System.Threading.Tasks.Task InsertClaimHistoryOnParticipantChangeAsync(bool addressChange, AG.Claims.CheckWriting.AG_Common.PartyAddressDTO partyAddress, AG.Claims.CheckWriting.AG_Common.PartyNameDTO partyName) {
            return base.Channel.InsertClaimHistoryOnParticipantChangeAsync(addressChange, partyAddress, partyName);
        }
    }
}
